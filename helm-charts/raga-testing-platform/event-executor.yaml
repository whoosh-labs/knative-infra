# Default values for testing-platform-backend.
image:
  repository: "ragaai/event-executor-knative-release"
  tag: "10-8776237"
  pullPolicy: IfNotPresent

imagePullSecrets:
  create: true
  name: "regcred"
fullnameOverride: "event-executor"

serviceAccount:
  create: true
  name: "raga-role"
  annotations: {}

broker:
  create: true
  dlq: "event-failure-capture"
  retry: 3

trigger:
  create: true

service:
  port: 8000

resources: 
  limits:
    cpu: 1
    memory: 2500M
  requests:
    cpu: 100m
    memory: 640M

autoscaling:
  minReplicas: 0
  maxReplicas: 3

livenessProbe:
  httpGet:
    path: /api/healthcheck
    port: 8000
  initialDelaySeconds: 3
  periodSeconds: 3
readinessProbe:
  httpGet:
    path: /api/healthcheck
    port: 8000
  initialDelaySeconds: 3
  periodSeconds: 3

domainmapping:
  create: false
  domain: NA
  service: NA

containerConcurrency:
  enable: false
  limit: 3

# env:
#   - name: AWS_ACCESS_KEY_ID
#     valueFrom:
#       secretKeyRef:
#         name: backend
#         key: AWS_ACCESS_KEY_ID
#   - name: AWS_SECRET_ACCESS_KEY
#     valueFrom:
#       secretKeyRef:
#         name: backend
#         key: AWS_SECRET_ACCESS_KEY
  - name: IMAGE_UPLOAD_S3_URL_PREFIX
    valueFrom: 
      secretKeyRef:
        name: event-executor
        key: IMAGE_UPLOAD_S3_URL_PREFIX
  - name: STATUS_UPDATER_CONCURRENCY
    valueFrom: 
      secretKeyRef:
        name: event-executor
        key: STATUS_UPDATER_CONCURRENCY
  - name: DATA_LOADER_CONCURRENCY
    value: '10'
  - name: DATA_LOADER_KAFKA_BROKER_URL
    value: 'http://kafka-broker-ingress.knative-eventing.svc.cluster.local/raga/data-loader'
  - name: STATUS_UPDATER_KAFKA_BROKER_URL
    value: 'http://kafka-broker-ingress.knative-eventing.svc.cluster.local/raga/status-updater'
  - name: VIDEO_DOWNLOAD_METHOD
    value: 'boto'
  - name: SERVICE_INVOCATION_METHOD
    value: 'knative'
