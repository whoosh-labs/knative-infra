# Default values for testing-platform-backend.
image:
  repository: "ragaai/status-updater-knative-release" 
  tag: "5-8b1c900"
  pullPolicy: IfNotPresent

imagePullSecrets:
  create: true
  name: "regcred"
fullnameOverride: "status-updater"

serviceAccount:
  create: true
  name: "raga-role"
  annotations: {}

broker:
  create: true
  dlq: "event-failure-capture"
  retry: 3

trigger:
  create: true

service:
  port: 6000

resources: 
  limits:
    cpu: 100m
    memory: 640M
  requests:
    cpu: 100m
    memory: 640M

autoscaling:
  minReplicas: 0
  maxReplicas: 3

livenessProbe:
  httpGet:
    path: /api/healthcheck
    port: 6000
  initialDelaySeconds: 3
  periodSeconds: 3
readinessProbe:
  httpGet:
    path: /api/healthcheck
    port: 6000
  initialDelaySeconds: 3
  periodSeconds: 3

domainmapping:
  create: false
  domain: NA
  service: NA

containerConcurrency:
  enable: true
  limit: 1

env:
  - name: MYSQL_HOST
    valueFrom: 
      secretKeyRef:
        name: status-updater
        key: MYSQL_HOST
  - name: MYSQL_PASSWORD
    valueFrom: 
      secretKeyRef:
        name: status-updater
        key: MYSQL_PASSWORD
  - name: MYSQL_USERNAME
    valueFrom: 
      secretKeyRef:
        name: status-updater
        key: MYSQL_USERNAME
  - name: MYSQL_DATABASE
    value: 'testing_platform'
  - name: PYTHON_OPERATOR_KAFKA_BROKER_URL
    value: 'http://kafka-broker-ingress.knative-eventing.svc.cluster.local/raga/python-operator'
  - name: DATA_LOADER_KAFKA_BROKER_URL
    value: 'http://kafka-broker-ingress.knative-eventing.svc.cluster.local/raga/data-loader'
  - name: SERVICE_INVOCATION_METHOD
    value: 'knative'
  - name: UMAP_OPERATOR_KAFKA_BROKER_URL
    value: 'http://kafka-broker-ingress.knative-eventing.svc.cluster.local/raga/umap-operators'
  - name: DATA_LOADER_QUEUE_URL
    value: 'NA'
